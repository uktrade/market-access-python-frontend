# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  codecov: codecov/codecov@3

jobs:
    tests:
        docker:
            # specify the version you desire here
            # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
            - image: circleci/python:3.9.0-node
            - image: postgres:13
              environment:
                  POSTGRES_DB: "market_access_pyfe"
                  POSTGRES_HOST_AUTH_METHOD: "trust"
            - image: ukti/mock-sso
              environment:
                  MOCK_SSO_PORT: "5000"
                  MOCK_SSO_USERNAME: test-user
                  MOCK_SSO_SCOPE: test

        environment:
            SECRET_KEY: "secretkey" # pragma: allowlist secret
            DEBUG: True
            ALLOWED_HOSTS: "localhost"
            DJANGO_SETTINGS_MODULE: "config.settings.test"
            DATABASE_URL: "postgresql://postgres@localhost/market_access_pyfe"
            MARKET_ACCESS_API_URI: ""
            MARKET_ACCESS_API_HAWK_ID: "market-access-api-hawk-id"
            MARKET_ACCESS_API_HAWK_KEY: "market-access-api-hawk-key"
            REDIS_URI: ""
            SSO_CLIENT: ""
            SSO_SECRET: ""
            SSO_API_URI: "http://localhost:5000/api/v1/"
            SSO_AUTHORIZE_URI: "http://localhost:5000/o/authorize/"
            SSO_BASE_URI: "http://localhost:5000/"
            SSO_TOKEN_URI: "http://localhost:5000/o/token/"
            SSO_MOCK_CODE: ""
            SSO_API_TOKEN: "token"
            DATAHUB_URL: ""
            DATAHUB_HAWK_ID: ""
            DATAHUB_HAWK_KEY: ""
            GTM_ID: ""
            GTM_AUTH: ""
            GTM_PREVIEW: ""
            COMPANIES_HOUSE_API_KEY: ""
            COMPANIES_HOUSE_API_ENDPOINT: ""

        working_directory: ~/market-access-python-frontend

        steps:
            - checkout

            - run:
                  name: Compile webpack config
                  command: npm install && npm run build

            - restore_cache:
                  keys:
                      - v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}

            - run:
                  command: |
                    sudo pip install --upgrade pip
                    sudo pip install poetry==1.6.1

            - run:
                  name: Install dependencies
                  command: |
                      poetry install --no-ansi

            - save_cache:
                  key: v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}
                  paths:
                      - /home/circleci/.cache/pypoetry/virtualenvs

            - run:
                  name: run tests & save coverage
                  command: |
                      poetry run pytest tests
                      poetry run coverage json

            - codecov/upload

            - store_artifacts:
                  path: test-reports
                  destination: test-reports

    pep8:
        docker:
            - image: circleci/python:3.9

        working_directory: ~/market-access-python-frontend

        steps:
            - checkout

            - restore_cache:
                  keys:
                      - v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}

            - run:
                  command: sudo pip install poetry==1.6.1

            - run:
                  name: Install dependencies
                  command: |
                      poetry install --no-ansi

            - save_cache:
                  key: v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}
                  paths:
                      - /home/circleci/.cache/pypoetry/virtualenvs

            - run: poetry run flake8 . --exclude=venv --count --max-line-length=120

    format_and_secrets_checks:
        docker:
            - image: circleci/python:3.9.0-node
        working_directory: ~/market-access-python-frontend
        steps:
            - checkout

            - run:
                  name: Install dependencies
                  command: npm install --dev

            - run:
                  command: sudo pip install pre-commit poetry
            - restore_cache:
                  keys:
                      - pre-commit-cache-{{ arch }}-{{ .Branch }}
            - run:
                  name: Formatting checks
                  command: pre-commit run --from-ref origin/HEAD --to-ref HEAD
            - save_cache:
                  key: pre-commit-cache-{{ arch }}-{{ .Branch }}
                  paths:
                      - ~/.cache/pre-commit

    ui_tests:
        docker:
            - image: circleci/python:3.9

        working_directory: ~/market-access-python-frontend

        steps:
            - checkout

            - restore_cache:
                  keys:
                      - v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}

            - run:
                  command: sudo pip install poetry==1.6.1

            - run:
                  name: Install dependencies
                  command: |
                      poetry install --no-ansi

            - save_cache:
                  key: v1-dependencies-{{ .Branch }}-{{ checksum "poetry.lock" }}
                  paths:
                      - /home/circleci/.cache/pypoetry/virtualenvs

            - run:
                  name: Run UI Tests
                  command: |
                      poetry run pytest ui_tests

            - store_artifacts:
                  path: ui-test-reports

workflows:
    version: 2
    test:
        jobs:
            - tests
            - pep8
            - format_and_secrets_checks
